@mixin border-width-for-screen($screen,$state,$state_name){
  /*::border size:: border-s-* */

  @each $element, $size in $sizes {
    @each $side in $sides{
      $alias: map_get($side_aliases,$side);
        @if $side == "all" {
          .#{$state_name}#{$screen}bd-#{$element}#{$state}{
            border-width: $size!important;
            border-style: solid;
          }

        } @else {
          .#{$state_name}#{$screen}bd-#{$alias}-#{$element}#{$state} {
            border-#{$side}-width: $size!important;
            border-#{$side}-style: solid;
          }
        }

    }
  }
}


@include border-width-for-screen('','','');

@media only screen and (max-width: 599px) {
  @include border-width-for-screen('sm-','','');
}
//md-css-property
@media only screen and (min-width: 600px) and (max-width: 899px){
  @include border-width-for-screen('md-','','');
}

//lg-css-property
@media only screen and (min-width: 900px) and (max-width: 1199px) {
  /*tablet-landscape-only*/
  @include border-width-for-screen('lg-','','');
}
//xlg-css-property
@media only screen and (min-width: 1200px) and (max-width: 1400px){
  /*.desktop-only */
  @include border-width-for-screen('xlg-','','');
}
//xxlg-css-property
@media only screen and (min-width: 1401px) {
  /*.desktop-up */
  @include border-width-for-screen('xxlg-','','');
}
@include border-width-for-screen('',':hover','hover\\:');
